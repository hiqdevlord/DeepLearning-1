function [] = checkNumericalGradient()
    x = [4; 10];
    [value, grad] = simpleQuadraticFunction(x);
    numgrad = computeNumericalGradient(@simpleQuatraticFunction, x);
    disp([numgrad grad]);
    diff = norm(numgrad - grad) / norm(numgrad + grad);
    disp(diff);
    
    numgrad = computeNumericalGradient(@simpleQuadraticFunction, x);

% Visually examine the two gradient computations.  The two columns
% you get should be very similar. 
disp([numgrad grad]);
fprintf('The above two columns you get should be very similar.\n(Left-Your Numerical Gradient, Right-Analytical Gradient)\n\n');

% Evaluate the norm of the difference between two solutions.  
% If you have a correct implementation, and assuming you used EPSILON = 0.0001 
% in computeNumericalGradient.m, then diff below should be 2.1452e-12 
diff = norm(numgrad-grad)/norm(numgrad+grad);
disp(diff); 
fprintf('Norm of the difference between numerical and analytical gradient (should be < 1e-9)\n\n');
end
